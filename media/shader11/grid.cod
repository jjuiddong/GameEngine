//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame : register(b0)
{
    float4x4 World;                     // Offset:    0, size:   64
    float4x4 View;                      // Offset:   64, size:   64
    float4x4 Projection;                // Offset:  128, size:   64
    float3  gEyePosW;                   // Offset:  192, size:   12
}

cbuffer cbLight : register(b1)
{
    float4  gLight_Ambient;             // Offset:    0, size:   16
    float4  gLight_Diffuse;             // Offset:   16, size:   16
    float4  gLight_Specular;            // Offset:   32, size:   16
    float3  gLight_Direction;           // Offset:   48, size:   12
    float3  gLight_PosW;                // Offset:   64, size:   12
}

cbuffer cbMaetrial : register(b2)
{
    float4  gMtrl_Ambient;              // Offset:    0, size:   16
    float4  gMtrl_Diffuse;              // Offset:   16, size:   16
    float4  gMtrl_Specular;             // Offset:   32, size:   16
    float4  gMtrl_Emissive;             // Offset:   48, size:   16
    float   gMtrl_Pow;                  // Offset:   64, size:    4
}

//
// 2 local object(s)
//
Texture2D txDiffuse;
SamplerState samLinear
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 World;                    // Offset:    0 Size:    64
                //   float4x4 View;                     // Offset:   64 Size:    64
                //   float4x4 Projection;               // Offset:  128 Size:    64
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyzw        0     NONE   float   xyzw
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 2   xyz         4     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyzw
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_output o3.xyzw
                dcl_output o4.xyz
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- Pos.x; v0.y <- Pos.y; v0.z <- Pos.z; v0.w <- Pos.w; 
                //   v1.x <- Normal.x; v1.y <- Normal.y; v1.z <- Normal.z; 
                //   v2.x <- Tex.x; v2.y <- Tex.y; 
                //   v3.x <- Color.x; v3.y <- Color.y; v3.z <- Color.z; v3.w <- Color.w; 
                //   o4.x <- <VS return value>.toEye.x; o4.y <- <VS return value>.toEye.y; o4.z <- <VS return value>.toEye.z; 
                //   o3.x <- <VS return value>.Color.x; o3.y <- <VS return value>.Color.y; o3.z <- <VS return value>.Color.z; o3.w <- <VS return value>.Color.w; 
                //   o2.x <- <VS return value>.Tex.x; o2.y <- <VS return value>.Tex.y; 
                //   o1.x <- <VS return value>.Normal.x; o1.y <- <VS return value>.Normal.y; o1.z <- <VS return value>.Normal.z; 
                //   o0.x <- <VS return value>.Pos.x; o0.y <- <VS return value>.Pos.y; o0.z <- <VS return value>.Pos.z; o0.w <- <VS return value>.Pos.w
                //
                #line 68 "d:\Project\GameEngine\media\shader11\grid.fx"
                itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- output.toEye.x; r0.y <- output.toEye.y; r0.z <- output.toEye.z
                dp4 r1.x, v0.xyzw, cb0[0].xyzw  // r1.x <- output.Pos.x
                dp4 r1.y, v0.xyzw, cb0[1].xyzw  // r1.y <- output.Pos.y
                dp4 r1.z, v0.xyzw, cb0[2].xyzw  // r1.z <- output.Pos.z
                dp4 r1.w, v0.xyzw, cb0[3].xyzw  // r1.w <- output.Pos.w
                dp4 r2.x, r1.xyzw, cb0[4].xyzw  // r2.x <- output.Pos.x
                dp4 r2.y, r1.xyzw, cb0[5].xyzw  // r2.y <- output.Pos.y
                dp4 r2.z, r1.xyzw, cb0[6].xyzw  // r2.z <- output.Pos.z
                dp4 r2.w, r1.xyzw, cb0[7].xyzw  // r2.w <- output.Pos.w
                dp4 r1.x, r2.xyzw, cb0[8].xyzw  // r1.x <- output.Pos.x
                dp4 r1.y, r2.xyzw, cb0[9].xyzw  // r1.y <- output.Pos.y
                dp4 r1.z, r2.xyzw, cb0[10].xyzw  // r1.z <- output.Pos.z
                dp4 r1.w, r2.xyzw, cb0[11].xyzw  // r1.w <- output.Pos.w
                dp3 r2.x, v1.xyzx, cb0[0].xyzx
                dp3 r2.y, v1.xyzx, cb0[1].xyzx
                dp3 r2.z, v1.xyzx, cb0[2].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- output.Normal.x; r2.y <- output.Normal.y; r2.z <- output.Normal.z
                mov r3.xy, v2.xyxx  // r3.x <- output.Tex.x; r3.y <- output.Tex.y
                mov r4.xyzw, v3.xyzw  // r4.x <- output.Color.x; r4.y <- output.Color.y; r4.z <- output.Color.z; r4.w <- output.Color.w
                mov o0.xyzw, r1.xyzw
                mov o3.xyzw, r4.xyzw
                mov o1.xyz, r2.xyzx
                mov o4.xyz, r0.xyzx
                mov o2.xy, r3.xyxx
                ret 
                // Approximately 27 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 World;                    // Offset:    0 Size:    64 [unused]
                //   float4x4 View;                     // Offset:   64 Size:    64 [unused]
                //   float4x4 Projection;               // Offset:  128 Size:    64 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // txDiffuse                         texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xyz         1     NONE   float       
                // TEXCOORD                 1   xy          2     NONE   float   xy  
                // COLOR                    0   xyzw        3     NONE   float       
                // TEXCOORD                 2   xyz         4     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- In.Pos.x; v0.y <- In.Pos.y; v0.z <- In.Pos.z; v0.w <- In.Pos.w; 
                //   v1.x <- In.Normal.x; v1.y <- In.Normal.y; v1.z <- In.Normal.z; 
                //   v2.x <- In.Tex.x; v2.y <- In.Tex.y; 
                //   v3.x <- In.Color.x; v3.y <- In.Color.y; v3.z <- In.Color.z; v3.w <- In.Color.w; 
                //   v4.x <- In.toEye.x; v4.y <- In.toEye.y; v4.z <- In.toEye.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 92 "d:\Project\GameEngine\media\shader11\grid.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0  // r0.x <- Out.x; r0.y <- Out.y; r0.z <- Out.z; r0.w <- Out.w
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

